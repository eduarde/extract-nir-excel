import os
import sys
import pandas as pd


NR_FACTURI = ["434", "6595805", "1026217", "7002822", "463902", "1026304", "1026337", "437", "438", "463917", "800222", "2468077", "7002831", "463966", "463973", "2475015", "7002832", "8011867", "1504874", "800268", "7002852", "464022", "2475059", "22055182", "7002858", "464064", "19009457", "192581", "464082", "187121672", "4866", "7002868", "466866", "19009469", "2480024", "BF 45", "1505079", "464100", "7002872", "19009473", "2475130", "464133", "2475151", "2475154", "464144", "2468346", "19009489", "2475153", "2475152", "187122034", "2468370", "464168", "7002882", "4940", "BF 49", "464189", "464186", "464190", "2475203", "464191", "2468456", "19009514", "19009520", "464224", "74", "2475238", "2475236", "2482351", "2480101", "2475262", "2475277", "2475279", "19009539", "467342", "467336", "467339", "2482759", "19009565", "467433", "467406", "467408", "8012078", "467449", "19009574", "18208294", "18208288", "467467", "467482", "2468674", "8012098", "2480167", "467499", "467498", "2475408", "187123068", "467508", "467517", "1005356", "25282", "2468794", "467583", "1037", "2480206", "2475467", "2483625", "2483675", "2483671", "2468854", "1054", "467730", "9003136", "18208807", "444", "467803", "8012242", "2469064", "2480290", "9003296", "445", "2484609", "2484607", "2484358", "2484373", "9003343", "1027804", "5341", "2484368", "6694128", "2469132", "2484636", "2484469", "2484468", "2480327", "2924", "2006417", "1005901", "2469134", "7002990", "2486172", "2486159", "2469185", "2484676", "2480360", "2486133", "44859", "9003472", "9003515", "467906", "1006286", "1006279", "467993", "468035", "18209520", "79519", "6718042", "19009708", "15259", "15258", "468201", "BF 61", "6722289", "468227", "187125109", "468246", "19009724", "1006966", "BF 165", "8012505", "7136", "BF 27", "1704216", "1704215", "468452", "1507570", "9004122", "25868", "468540", "1507806", "1704236", "468515", "468558", "44859s", "44859ss", "18210468", "2480388", "2480394", "2469265", "2484759", "1007567", "1007616", "2486595", "775119", "18210637", "2480422", "2484785", "2486731", "1508205", "19009862", "1874", "18210933", "18210935", "800710", "12769", "2469426", "2469425", "1960", "2487255", "2484882", "2487264", "5987", "1508502", "1300", "200501442", "2480485", "1008126", "2484921", "2484955", "187127657", "21162", "468995", "2485008", "187127914", "2488169", "2488168", "2485018", "2001000726", "2480587", "2489177", "469028", "21190", "2488312", "179", "775489", "775488", "775487", "1028696", "6860263", "2480652", "6286", "2480666", "2480683", "1509659", "2490820", "8013003", "2490963", "2490992", "2490991", "2491072", "2480732", "4268", "6391", "2480739", "775723", "26719", "2489686", "2489733", "6526", "200602182", "19010174", "469668", "2480807", "2492056", "2492053", "2489867", "19010215", "2485472", "469887", "2490093", "2485564", "2480895", "6935246",
              "6935966", "2475307", "2485604", "7003432", "7003433", "218945", "469990", "7003447", "2485638", "2480936", "2877", "2891", "2000074", "470062", "2490301", "2927", "8013404", "6831", "7003482", "20200762", "2493763", "2485694", "470128", "6958886", "19010379", "470201", "2952", "27283", "2485733", "2494047", "2480983", "19010384", "2490450", "299", "2485788", "19010417", "7003515", "2485802", "1497", "19010427", "6998", "20200815", "20200814", "2496599", "2485859", "2485862", "19010466", "2481061", "776642", "776643", "470581", "1011497", "19010514", "2481158", "9007554", "19010571", "200800130", "200800169", "2497075", "2481198", "2497092", "2495190", "200800773", "27829", "2495177", "19010627", "3403", "7030928", "2481226", "2497188", "703622", "7037674", "BF 39", "2481237", "2495247", "2481250", "3471", "5788", "2495262", "2481275", "7044308", "471237", "2481277", "2481288", "305", "2481300", "471334", "2022", "7440", "2497399", "7453", "8013976", "471422", "2481334", "2481333", "216109", "216109", "2481336", "471490", "7065515", "1105963", "7570", "1013289", "471733", "4313", "2495554", "2497742", "2481439", "13038", "2495664", "172/219082", "307", "2497994", "1705219", "2502533", "2504058", "2504041", "7127479", "10130", "28737", "2504224", "2502607", "2502618", "2502617", "BF 74", "2504329", "2504336", "7003902", "2504448", "2495945", "2502674", "2502685", "10223", "7154428", "2502755", "2504652", "2502745", "1200145", "2504708", "2504690", "2496075", "2502801", "2502796", "2496104", "1108370", "121095", "19011285", "8577", "2502829", "2504861", "2504920", "2504975", "2505080", "2505063", "19011367", "20BV0008986", "2502915", "2502912", "978610", "2511443", "1703755", "144", "147", "149", "1101264", "18220182", "7269645", "55011171051", "2513351", "10683", "2503158", "1018082", "2503187", "326", "2513547", "1705685", "2503249", "2513740", "2513802", "2503296", "2513849", "2513869", "20201419", "2514062", "2503395", "20201423", "7347728", "16149", "2503524", "2513507", "170147189", "2503620", "19012015", "19012018", "160025852", "2519844", "219913047369", "1705894", "2503675", "2520107", "2520108", "1021027", "2503725", "2520865", "19012096", "7451432", "2512544", "2503744", "2520956", "2512571", "BF 47", "2512588", "2512585", "BF 24", "2503783", "1202989", "1114070", "3258", "BF 95", "2512648", "2521110", "3259", "2503828", "2521148", "2512678", "2503838", "2512712", "2503852", "2512704", "19012188", "2512740", "2512736", "2521282", "2503881", "2521281", "20210051", "2512751", "2512756", "2512753", "11499", "170153042", "7506539", "2503971", "2503970", "19012261", "BF 157", "3050303", "2525122", "3050442", "19012424", "782092", "2433016", "2527552", "2525226", "7578122", "19012663", "11974", "1205386", "1205457", "19013477", "19013574", "1706873", "2528839", "7587", "19013544", "7005047", "BF 8", "228617", "16021785"]


def get_date_file(filename):
    try:
        cols = [8]
        data = pd.read_excel(filename, usecols=cols)
        data.head()
        df = data
        return df.iloc[5][0]
    except IndexError:
        return ""


def read_file(filename):
    cols = [2, 3, 4, 5]
    data = pd.read_excel(filename, usecols=cols)
    data.head()
    df = data
    df = df.dropna()
    df = df.iloc[2:]
    df['Date'] = pd.to_datetime(get_date_file(filename), errors = 'coerce').date()
    return df


def write_file(df, filename):
    df.to_excel(filename, sheet_name='Total', index=False)


def __valid_file(file):
    return file.path.endswith(".xlsx") or file.path.endswith(".XLS") or file.path.endswith(".xls") and file.is_file()


def check_factura_in_file(filename, facturi_to_check):
    try:
        cols = [6]
        data = pd.read_excel(filename, usecols=cols)
        data.head()
        df = data
        nr_factura = str(df.iloc[5][0])
        return nr_factura in facturi_to_check
    except IndexError:
        return False


def check_factura_in_title(number_list_title):
    return any(nr in NR_FACTURI for nr in number_list_title)


def collect_xls_files(directory):
    files = []
    for entry in os.scandir(directory):
        if not __valid_file(entry):
            continue
        import re
        number_list_title = re.findall(r'\d+', entry.path)
        if check_factura_in_title(number_list_title):
            files.append(entry.path)
        elif check_factura_in_file(entry.path, NR_FACTURI):
            files.append(entry.path)

    return files


def main():
    try:
        directory = sys.argv[1]
    except IndexError:
        directory = './files'

    result_file_excel = './results.xlsx'
    if os.path.exists(result_file_excel):
        os.remove(result_file_excel)

    files = collect_xls_files(directory)

    df_result = pd.DataFrame()
    for file in files:
        df_excel = read_file(file)
        df_result = pd.concat([df_result, df_excel], axis=0)
    write_file(df_result, result_file_excel)


if __name__ == "__main__":
    main()
